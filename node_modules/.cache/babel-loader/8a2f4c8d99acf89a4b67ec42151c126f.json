{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/divyasankar/Desktop/Semester_2/Data_Engineering/project/create-react-app/univ/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"mutation deleteCourse($CourseID: ID!){\\n                 deleteCourse(courseID: $CourseID) {\\n                          id name\\n                        }\\n                }\\n      \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"mutation createCourse($name: String!, $ProfessorID: ID!){\\n                 createCourse(name: $name, professorID: $ProfessorID) {\\n                          id  name  professor{\\n                                            name email\\n                                        }\\n                        }\\n                }\\n      \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport * as query from './index.js';\nimport ApoClient from \"./ApolloClient\";\n\nclass CourseService {\n  constructor() {\n    this.addCourse = (id, name) => {\n      console.log(\"Name\", name, \"ProfessorId\", id);\n      return ApoClient.mutate({\n        mutation: gql(_templateObject()),\n        variables: {\n          name: name,\n          ProfessorID: id\n        }\n      });\n    };\n\n    this.deleteCourse = id => {\n      console.log(\"CourseId\", id);\n      return ApoClient.mutate({\n        mutation: gql(_templateObject2()),\n        variables: {\n          CourseID: id\n        }\n      });\n    };\n\n    this.updateCourse = (courseid, name, profid) => {\n      console.log(\"CourseId\", courseid, \"Name:\", name, \"ProfessorId:\", profid);\n      return \"Success\"; // return APPLLO_CLIENT.mutate({\n      //     mutation: query.CREATE_COURSE,\n      //     variables: {\n      //         name:name,\n      //         facultyID:facultyId,\n      //     }}\n      // );\n    };\n\n    this.addStudentToCourse = (cid, sid) => {\n      console.log(\"CourseId\", cid, \"StudentId\", sid);\n      return \"Success\"; // return APPLLO_CLIENT.mutate({\n      //     mutation: query.CREATE_COURSE,\n      //     variables: {\n      //         name:name,\n      //         facultyID:facultyId,\n      //     }}\n      // );\n    };\n\n    this.removeStudentFromCourse = (cid, sid) => {\n      console.log(\"CourseId\", cid, \"StudentId\", sid);\n      return \"Success\"; // return APPLLO_CLIENT.mutate({\n      //     mutation: query.CREATE_COURSE,\n      //     variables: {\n      //         name:name,\n      //         facultyID:facultyId,\n      //     }}\n      // );\n    };\n\n    this.createAssignment = (id, name) => {\n      console.log(\"CourseId\", id, \"Assignment\", name);\n      return \"Success\"; // return APPLLO_CLIENT.mutate({\n      //     mutation: query.CREATE_COURSE,\n      //     variables: {\n      //         name:name,\n      //         facultyID:facultyId,\n      //     }}\n      // );\n    };\n\n    this.createAssignmentGrade = (aid, sid, grade) => {\n      console.log(\"AssignmentId\", aid, \"StudentId\", sid, \"Grade\", grade);\n      return \"Success\"; // return APPLLO_CLIENT.mutate({\n      //     mutation: query.CREATE_COURSE,\n      //     variables: {\n      //         name:name,\n      //         facultyID:facultyId,\n      //     }}\n      // );\n    };\n  }\n\n  static getInstance() {\n    if (this.currInstance == null) {\n      this.currInstance = new CourseService();\n    }\n\n    return this.currInstance;\n  }\n\n}\n\nCourseService.currInstance = null;\nconst myCourseService = CourseService.getInstance();\nexport default myCourseService;","map":{"version":3,"sources":["/Users/divyasankar/Desktop/Semester_2/Data_Engineering/project/create-react-app/univ/src/CourseService.js"],"names":["ApolloClient","ApolloProvider","Query","gql","query","ApoClient","CourseService","addCourse","id","name","console","log","mutate","mutation","variables","ProfessorID","deleteCourse","CourseID","updateCourse","courseid","profid","addStudentToCourse","cid","sid","removeStudentFromCourse","createAssignment","createAssignmentGrade","aid","grade","getInstance","currInstance","myCourseService"],"mappings":"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","sourcesContent":["import ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nimport * as query from './index.js'\n\n\nimport ApoClient from \"./ApolloClient\";\n\nclass CourseService {\n    static currInstance = null;\n\n    static getInstance() {\n        if (this.currInstance == null) {\n            this.currInstance = new CourseService();\n        }\n        return this.currInstance;\n    }\n\n    addCourse = (id, name) => {\n      console.log(\"Name\",name,\"ProfessorId\",id);\n      return ApoClient.mutate({\n          mutation: gql`mutation createCourse($name: String!, $ProfessorID: ID!){\n                 createCourse(name: $name, professorID: $ProfessorID) {\n                          id  name  professor{\n                                            name email\n                                        }\n                        }\n                }\n      `,\n          variables: { name: name, ProfessorID: id }, }\n      );\n    };\n\n    deleteCourse = (id) => {\n      console.log(\"CourseId\",id);\n      return ApoClient.mutate({\n          mutation: gql`mutation deleteCourse($CourseID: ID!){\n                 deleteCourse(courseID: $CourseID) {\n                          id name\n                        }\n                }\n      `,\n          variables: { CourseID: id } }\n      );\n    };\n\n    updateCourse = (courseid,name,profid) => {\n      console.log(\"CourseId\",courseid,\"Name:\",name,\"ProfessorId:\",profid);\n      return \"Success\";\n        // return APPLLO_CLIENT.mutate({\n        //     mutation: query.CREATE_COURSE,\n        //     variables: {\n        //         name:name,\n        //         facultyID:facultyId,\n        //     }}\n        // );\n    };\n\n    addStudentToCourse = (cid,sid) => {\n      console.log(\"CourseId\",cid,\"StudentId\",sid);\n      return \"Success\";\n        // return APPLLO_CLIENT.mutate({\n        //     mutation: query.CREATE_COURSE,\n        //     variables: {\n        //         name:name,\n        //         facultyID:facultyId,\n        //     }}\n        // );\n    };\n\n    removeStudentFromCourse = (cid,sid) => {\n      console.log(\"CourseId\",cid,\"StudentId\",sid);\n      return \"Success\";\n        // return APPLLO_CLIENT.mutate({\n        //     mutation: query.CREATE_COURSE,\n        //     variables: {\n        //         name:name,\n        //         facultyID:facultyId,\n        //     }}\n        // );\n    };\n\n    createAssignment = (id, name) => {\n      console.log(\"CourseId\",id,\"Assignment\",name);\n      return \"Success\";\n        // return APPLLO_CLIENT.mutate({\n        //     mutation: query.CREATE_COURSE,\n        //     variables: {\n        //         name:name,\n        //         facultyID:facultyId,\n        //     }}\n        // );\n    };\n\n    createAssignmentGrade = (aid,sid,grade) => {\n      console.log(\"AssignmentId\",aid,\"StudentId\",sid,\"Grade\",grade);\n      return \"Success\";\n        // return APPLLO_CLIENT.mutate({\n        //     mutation: query.CREATE_COURSE,\n        //     variables: {\n        //         name:name,\n        //         facultyID:facultyId,\n        //     }}\n        // );\n    };\n\n\n}\n\nconst myCourseService = CourseService.getInstance();\nexport default myCourseService;\n"]},"metadata":{},"sourceType":"module"}